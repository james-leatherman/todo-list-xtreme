name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Start backend and DB
      working-directory: ./backend
      run: |
        docker-compose up -d db
        docker-compose up -d api
        sleep 10

    - name: Run backend tests
      working-directory: ./backend
      env:
        POSTGRES_USER: ${{ secrets.DB_USER || 'postgres' }}
        POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD || 'postgres' }}
        POSTGRES_SERVER: localhost
        POSTGRES_PORT: 5432
        POSTGRES_DB: todolist
        DATABASE_URL: postgresql://${{ secrets.DB_USER || 'postgres' }}:${{ secrets.DB_PASSWORD || 'postgres' }}@localhost:5432/todolist
        SECRET_KEY: ${{ secrets.SECRET_KEY || 'test_secret_key' }}
        CORS_ORIGINS: "http://localhost:3000"
      run: pytest

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install
        
    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test -- --watchAll=false
