name: Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Build and push backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/todo-list-xtreme-backend:latest
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
        
    - name: Build frontend
      working-directory: ./frontend
      env:
        REACT_APP_API_URL: ${{ secrets.API_URL }}
      run: npm run build
        
    # Deploy steps would go here, depending on your hosting provider
    # For now, we'll just create a deployment artifact
    
    - name: Create deployment artifact
      run: |
        mkdir -p deployment
        cp -r frontend/build deployment/frontend
        cp backend/docker-compose.yml deployment/
        echo "DB_USER=${{ secrets.DB_USER }}" > deployment/.env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> deployment/.env
        tar -czf deployment.tar.gz deployment
        
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v3
      with:
        name: deployment
        path: deployment.tar.gz
